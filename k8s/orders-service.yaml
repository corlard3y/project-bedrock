apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-service
  namespace: retail-store
  labels:
    app: orders-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orders-service
  template:
    metadata:
      labels:
        app: orders-service
    spec:
      containers:
      - name: orders-service
        image: nginx:alpine
        ports:
        - containerPort: 80
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: retail-store-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: retail-store-config
              key: POSTGRES_PORT
        - name: POSTGRES_DATABASE
          valueFrom:
            configMapKeyRef:
              name: retail-store-config
              key: POSTGRES_DATABASE
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: retail-store-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: retail-store-secrets
              key: POSTGRES_PASSWORD
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: orders-service
  namespace: retail-store
spec:
  selector:
    app: orders-service
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
